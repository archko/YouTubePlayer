<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    android:versionCode="1"
    android:versionName="1.0">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:networkSecurityConfig="@xml/network_security_config"
        android:requestLegacyExternalStorage="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true">
        <activity
            android:name="com.arch.youtube.ui.YouTubeActivity"
            android:exported="true"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name="com.arch.youtube.ui.EmptyFragmentActivity" />
        <activity android:name="com.arch.youtube.ui.MainActivity" />
        <activity android:name="com.arch.youtube.ui.OauthActivity" />

        <activity
            android:name="net.openid.appauthdemo.LoginActivity"
            android:exported="true"
            android:theme="@style/AppTheme"
            android:windowSoftInputMode="stateHidden"></activity>

        <activity
            android:name="net.openid.appauthdemo.TokenActivity"
            android:theme="@style/AppTheme"
            android:windowSoftInputMode="stateHidden"></activity>

        <!--
        This activity declaration is merged with the version from the library manifest.
        It demonstrates how an https redirect can be captured, in addition to or instead of
        a custom scheme.

        Generally, this should be done in conjunction with an app link declaration for Android M
        and above, for additional security and an improved user experience. See:

        https://developer.android.com/training/app-links/index.html

        The declaration from the library can be completely replaced by adding

        tools:node="replace"

        To the list of attributes on the activity element.
        -->
        <activity
            android:name="net.openid.appauth.RedirectUriReceiverActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                    android:host="appauth.demo-app.io"
                    android:path="/oauth2redirect"
                    android:scheme="https" />
            </intent-filter>
        </activity>
    </application>

</manifest>
